name: Build LEDE Firmware

on:
  workflow_dispatch:  # 手动触发编译
  push:
    branches: [ main ]  # 代码更新时自动编译

jobs:
  build:
    runs-on: ubuntu-latest  # 使用 GitHub 最新 Ubuntu 环境
    container:
      image: timiil/coolsnowwolf-lede-builder:latest  # 预装环境的 Docker 镜像

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Prepare Build Environment
      run: |
        # 设置国内镜像源加速（可选）
        sed -i 's|github.com|ghproxy.com/https://github.com|g' feeds.conf.default
        sed -i 's|git.openwrt.org|ghproxy.com/https://git.openwrt.org|g' feeds.conf.default
        
        # 更新 feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Download Packages
      run: make -j8 download  # 预下载依赖包
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 内置 token 避免限流

    - name: Configure Firmware
      run: |
        # 使用预设配置（需提前上传.config文件）
        if [ -f ".config" ]; then
          cp .config .config.old
        fi
        make defconfig  # 生成默认配置
        # 或手动配置：make menuconfig (需本地生成.config后上传)

    - name: Build Firmware
      run: make -j$(($(nproc) + 1)) V=s  # 多线程编译
      timeout-minutes: 360  # 最长编译时间 6 小时

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lede-firmware
        path: bin/targets/*/*
