name: Build LEDE Firmware

on:
  workflow_dispatch:  # 手动触发编译
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: timiil/coolsnowwolf-lede-builder:latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Prepare Build Environment
      run: |
        # 安装必要依赖
        apt-get update
        apt-get install -y ncurses-base
        
        # 恢复原始源设置
        sed -i 's|ghproxy.com/https://github.com|github.com|g' feeds.conf.default
        sed -i 's|ghproxy.com/https://git.openwrt.org|git.openwrt.org|g' feeds.conf.default
        
        # 仅保留下载镜像加速
        sed -i 's|https://downloads.openwrt.org|https://mirror.sjtu.edu.cn/openwrt|g' scripts/download.pl
        
        # 更新 feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Preconfigure Environment
      run: |
        # 预先生成配置工具而不触发终端
        make -j1 tools/install V=s || true
        make -j1 toolchain/install V=s || true

    - name: Configure Firmware
      run: |
        # 使用非交互方式生成默认配置
        echo "CONFIG_TARGET_x86=y" > .config
        echo "CONFIG_TARGET_x86_64=y" >> .config
        echo "CONFIG_TARGET_ROOTFS_EXT4FS=y" >> .config
        
        # 添加常用插件
        echo "CONFIG_PACKAGE_luci=y" >> .config
        echo "CONFIG_PACKAGE_luci-app-ssr-plus=y" >> .config
        echo "CONFIG_PACKAGE_luci-theme-material=y" >> .config
        
        # 验证配置
        make oldconfig

    - name: Download Packages
      run: |
        # 设置虚拟终端环境
        export TERM=dumb
        make -j$(nproc) download
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Firmware
      run: |
        # 设置虚拟终端环境
        export TERM=dumb
        make -j$(($(nproc) + 1)) V=s
      timeout-minutes: 360

    - name: Upload Firmware Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lede-firmware
        path: bin/targets/*/*

    - name: Cache Build Files
      uses: actions/cache@v4
      with:
        path: |
          dl
          build_dir
          staging_dir
          tmp
        key: ${{ runner.os }}-lede-cache-${{ hashFiles('.config') }}
