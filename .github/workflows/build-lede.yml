name: Build LEDE Firmware

on:
  workflow_dispatch:  # 手动触发编译
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: timiil/coolsnowwolf-lede-builder:latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Prepare Build Environment
      run: |
        # 移除问题镜像源，改用原始源
        sed -i 's|ghproxy.com/https://github.com|github.com|g' feeds.conf.default
        sed -i 's|ghproxy.com/https://git.openwrt.org|git.openwrt.org|g' feeds.conf.default
        
        # 仅保留下载镜像加速
        sed -i 's|https://downloads.openwrt.org|https://mirror.sjtu.edu.cn/openwrt|g' scripts/download.pl
        
        # 更新 feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Download Packages
      run: |
        # 设置 GitHub 代理环境变量
        export GIT_TERMINAL_PROMPT=1
        export http_proxy=http://ghproxy.com
        export https_proxy=http://ghproxy.com
        make -j$(nproc) download
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Firmware
      run: |
        if [ -f ".config" ]; then
          cp .config .config.old
        fi
        make defconfig

        # 自定义配置（示例）
        echo "CONFIG_TARGET_x86=y" >> .config
        echo "CONFIG_TARGET_x86_64=y" >> .config
        echo "CONFIG_PACKAGE_luci-app-ssr-plus=y" >> .config

    - name: Build Firmware
      run: make -j$(($(nproc) + 1)) V=s
      timeout-minutes: 360

    - name: Upload Firmware Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lede-firmware
        path: bin/targets/*/*

    - name: Cache Build Files
      uses: actions/cache@v4
      with:
        path: |
          dl
          build_dir
          staging_dir
          tmp
        key: ${{ runner.os }}-lede-cache-${{ hashFiles('.config') }}
